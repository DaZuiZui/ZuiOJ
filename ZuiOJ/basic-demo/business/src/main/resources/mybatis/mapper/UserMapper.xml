<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dazuizui.business.mapper.UserMapper">
    <select id="queryUserByUsername" resultType="com.dazuizui.basicapi.entry.User">
        select
            id,
            username
        from
            user
        where
            username = #{username}
        limit
            1
    </select>
    <!--
        查询管理员集合
    -->
    <select id="queryListOfAdmin" resultType="string">
        select
            name
        from
            user
        where
            role >= 4
    </select>
    <!--
        物理删除用户通过id
    -->
    <delete id="deleteUserById">
        delete from
            user
        where
            id = #{id}
    </delete>

    <!--
        Tombstone users in batchers
        批量逻辑删除用户
    -->
    <update id="tombstoneUsersInBatches">
        update
            user
        set
            del_flag  = 1
        where
            id
        in
        <foreach collection="delArr" item="obj" open="(" separator="," close=")">
            #{obj}
        </foreach>;
    </update>

    <!--
        通过id批量获取username
    -->
    <select id="getDateInBatches" resultType="string">
        select
            username
        from 
            user
        where 
            id 
        in
            <foreach collection="delArr" item="obj" open="(" separator="," close=")">
                #{obj}
            </foreach>
        ;
    </select>

    <!--
        管理员分页获取学生数据
    -->
    <select id="pagingToGetUserDate" resultType="com.dazuizui.basicapi.entry.User">
        select
            *
        from
            user
        limit
            #{pages},#{numbers}
    </select>

    <!--
        查询用户数量
    -->
    <select id="queryCountOfUser" resultType="long">
        select
            count(0)
        from
            user
    </select>

    <!--
        通过id查询用户
    -->
    <select id="queryUserById" resultType="com.dazuizui.basicapi.entry.User">
        select
            *
        from
            user
        where
            id = #{id}
        limit 1
    </select>

    <!--
        根据用户名或者学号查询用户 只获取一个
    -->
    <select id="checkUsernameAndStudentId" resultType="com.dazuizui.basicapi.entry.User">
        select
            id
        from
            user
        where
            username = #{username}
        limit 1
    </select>


    <!--
        根据username查询用户
    -->
    <select id="userLogin" resultType="com.dazuizui.basicapi.entry.User">
        select
            id,
            username,
            email,
            name,
            year,
            mouth,
            sex,
            password,
            role,
            status,
            head_portrait
        from
            user
        where
            username = #{username}
        limit 1
    </select>


    <insert id="register" useGeneratedKeys="true" keyProperty="id">
        insert into
            user
        value(
            null,
            #{username},
            #{email},
            #{name},
            #{sex},
            #{password},
            1,
            #{year},
            #{mouth},
            '',
            #{createTime},
            null,
            null,
            #{updateTime},
            #{updateById},
            #{updateByName},
            0,
            0
        )
    </insert>


    <!--
        通过id更新用户信息
    -->
    <update id="updateUserInfoById">
        update
            user
        <set>
            <if test="name != null and name.length() > 0">
                name = #{name},
            </if>
            <if test="sex != null and sex != 0">
                sex = #{sex},
            </if>
            <if test="username != null and username.length() != ''">
                username = #{username},
            </if>
            <if test="email != null and email.length() != '' ">
                email = #{email},
            </if>
            <if test="password != null and password.length() != ''">
                password = #{password},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="updateByName != null and updateByName.length() != ''">
                update_by_name = #{updateByName},
            </if>
            <if test="updateById != null and updateById != 0 ">
                update_by_id = #{updateById},
            </if>
            <if test="delFlag != null and delFlag != 0">
                del_flag = #{delFlag},
            </if>
            <if test="status != null and status != 0">
                status = #{status},
            </if>
            <if test="type != null and type != 0">
                type = #{type},
            </if>
            <if test="role != null and type != 0 ">
                role = #{role},
            </if>
            <if test="headPortrait != null and headPortrait.length() != ''">
                head_portrait = #{headPortrait},
            </if>
            <if test="mouth != null and mouth != 0">
                mouth = #{mouth},
            </if>
            <if test="year != null and year != 0">
                year = #{year},
            </if>
        </set>

        where
            id = #{id}
    </update>
</mapper>